definitions:
  UserModel.User:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      id:
        type: integer
      last_login_at:
        type: string
      last_login_ip:
        type: string
      nickname:
        type: string
      password:
        type: string
      phone:
        type: string
      status:
        type: integer
      updated_at:
        type: string
      user_type:
        enum:
        - admin
        - regular
        - guest
        type: string
      username:
        type: string
    required:
    - user_type
    type: object
  auth.LoginRequest:
    properties:
      client_ip:
        type: string
      password:
        maxLength: 72
        minLength: 8
        type: string
      request_id:
        type: string
      request_time:
        type: integer
      user_agent:
        maxLength: 256
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - client_ip
    - password
    - request_id
    - request_time
    - username
    type: object
  auth.RegisterRequest:
    properties:
      client_ip:
        type: string
      password:
        maxLength: 72
        minLength: 8
        type: string
      request_id:
        type: string
      request_time:
        type: integer
      user_agent:
        maxLength: 256
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - client_ip
    - password
    - request_id
    - request_time
    - username
    type: object
  system.SystemConfig:
    properties:
      app:
        properties:
          uptime:
            type: string
        type: object
      db_host:
        type: string
      db_name:
        type: string
      db_password:
        type: string
      db_port:
        type: integer
      db_user:
        type: string
      debug_mode:
        type: boolean
      environment:
        type: string
      jwt_expire:
        type: integer
      jwt_secret:
        type: string
      log_level:
        type: string
      port:
        type: integer
      redis_db:
        type: integer
      redis_host:
        type: string
      redis_password:
        type: string
      redis_port:
        type: integer
      stats:
        properties:
          cpu_usage_percent:
            type: number
          memory_total:
            type: integer
          memory_used:
            type: integer
          memory_used_percent:
            type: number
        type: object
      system_name:
        type: string
      version:
        type: string
    required:
    - db_host
    - db_name
    - db_password
    - db_port
    - db_user
    - environment
    - jwt_expire
    - jwt_secret
    - log_level
    - port
    - redis_host
    - redis_port
    - system_name
    - version
    type: object
  type_response.BaseResponse:
    properties:
      code:
        description: 业务状态码
        type: integer
      data:
        description: 核心业务数据
      message:
        description: 提示信息
        type: string
      token:
        description: 认证令牌
        type: string
    type: object
  type_response.ChangePasswordRequest:
    properties:
      new_password:
        minLength: 6
        type: string
      old_password:
        minLength: 6
        type: string
    required:
    - new_password
    - old_password
    type: object
  type_response.UpdateUserProfileRequest:
    properties:
      nickname:
        maxLength: 32
        minLength: 2
        type: string
    required:
    - nickname
    type: object
  type_response.UserListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/type_response.UserResponse'
        type: array
      page:
        minimum: 1
        type: integer
      size:
        minimum: 1
        type: integer
      total:
        type: integer
    type: object
  type_response.UserResponse:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      id:
        type: string
      last_login_at:
        type: string
      last_login_ip:
        type: string
      nickname:
        type: string
      phone:
        type: string
      updated_at:
        type: string
      username:
        type: string
    required:
    - created_at
    - id
    - updated_at
    - username
    type: object
info:
  contact: {}
paths:
  /admin/{username}:
    put:
      consumes:
      - application/json
      description: 更新指定管理员的信息
      parameters:
      - description: 用户名
        in: path
        name: username
        required: true
        type: string
      - description: 更新字段
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            type: string
        "400":
          description: 更新失败
          schema: {}
      summary: 更新管理员信息
      tags:
      - Admin
  /admin/info/{username}:
    get:
      consumes:
      - application/json
      description: 获取指定管理员的详细信息
      parameters:
      - description: 用户名
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 管理员信息
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 未找到管理员
          schema: {}
      summary: 获取管理员信息
      tags:
      - Admin
  /admin/list:
    get:
      consumes:
      - application/json
      description: 分页获取系统中的管理员列表
      parameters:
      - description: 页码
        in: query
        name: page
        required: true
        type: integer
      - description: 每页数量
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 总数量
          schema:
            type: integer
      summary: 分页获取管理员列表
      tags:
      - Admin
  /admin/login:
    post:
      consumes:
      - application/json
      description: 处理管理员登录请求
      parameters:
      - description: 用户名
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: 密码
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 登录失败
          schema: {}
      summary: 管理员登录
      tags:
      - Admin
  /admin/register:
    post:
      consumes:
      - application/json
      description: 注册新管理员账户
      parameters:
      - description: 用户名
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: 密码
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功
          schema:
            type: string
        "400":
          description: 注册失败
          schema: {}
      summary: 管理员注册
      tags:
      - Admin
  /api/v1/admin/info:
    get:
      consumes:
      - application/json
      description: 获取当前登录管理员的详细信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/type_response.BaseResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取管理员信息
      tags:
      - 管理员管理
  /api/v1/admin/list:
    get:
      consumes:
      - application/json
      description: 分页获取管理员列表信息
      parameters:
      - default: 1
        description: 页码，默认1
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量，默认10
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/type_response.BaseResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取管理员列表
      tags:
      - 管理员管理
  /api/v1/admin/login:
    post:
      consumes:
      - application/json
      description: 处理管理员登录请求，验证用户名和密码，返回JWT令牌
      parameters:
      - description: 登录请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            allOf:
            - $ref: '#/definitions/type_response.BaseResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
        "401":
          description: 登录失败
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
      summary: 管理员登录
      tags:
      - 管理员管理
  /api/v1/admin/register:
    post:
      consumes:
      - application/json
      description: 处理管理员注册请求，创建新的管理员账户
      parameters:
      - description: 注册请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功
          schema:
            allOf:
            - $ref: '#/definitions/type_response.BaseResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
        "409":
          description: 用户已存在
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
      summary: 管理员注册
      tags:
      - 管理员管理
  /api/v1/admin/update:
    put:
      consumes:
      - application/json
      description: 更新当前登录管理员的信息
      parameters:
      - description: 更新信息参数
        in: body
        name: request
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/type_response.BaseResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新管理员信息
      tags:
      - 管理员管理
  /api/v1/system/config:
    get:
      consumes:
      - application/json
      description: 获取系统配置信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/type_response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/system.SystemConfig'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取系统配置
      tags:
      - 系统管理
    put:
      consumes:
      - application/json
      description: 更新系统配置信息
      parameters:
      - description: 系统配置信息
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/system.SystemConfig'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新系统配置
      tags:
      - 系统管理
  /api/v1/system/health:
    get:
      consumes:
      - application/json
      description: 获取系统健康检查信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/type_response.BaseResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取系统健康状态
      tags:
      - 系统管理
  /api/v1/system/info:
    get:
      consumes:
      - application/json
      description: 获取系统基本信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/type_response.BaseResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取系统信息
      tags:
      - 系统管理
  /api/v1/system/metrics:
    get:
      consumes:
      - application/json
      description: 获取系统运行指标信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/type_response.BaseResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取系统指标
      tags:
      - 系统管理
  /api/v1/user/avatar:
    post:
      consumes:
      - multipart/form-data
      description: 上传并更新当前登录用户的头像
      parameters:
      - description: 用户头像文件（支持jpg、png、gif，小于5MB）
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功
          schema:
            allOf:
            - $ref: '#/definitions/type_response.BaseResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 上传用户头像
      tags:
      - 用户管理
  /api/v1/user/list:
    get:
      consumes:
      - application/json
      description: 分页获取用户列表信息
      parameters:
      - default: 1
        description: 页码，默认1
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量，默认10
        in: query
        name: size
        type: integer
      - description: 用户名筛选
        in: query
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/type_response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/type_response.UserListResponse'
              type: object
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取用户列表
      tags:
      - 用户管理
  /api/v1/user/login:
    post:
      consumes:
      - application/json
      description: 处理用户登录请求，验证用户名和密码，返回JWT令牌
      parameters:
      - description: 登录请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            allOf:
            - $ref: '#/definitions/type_response.BaseResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
        "401":
          description: 登录失败
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
      summary: 用户登录
      tags:
      - 用户管理
  /api/v1/user/password:
    put:
      consumes:
      - application/json
      description: 修改当前登录用户的密码
      parameters:
      - description: 修改密码请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/type_response.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 修改成功
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 修改用户密码
      tags:
      - 用户管理
  /api/v1/user/profile:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的个人资料信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/type_response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/type_response.UserResponse'
              type: object
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取用户个人资料
      tags:
      - 用户管理
    put:
      consumes:
      - application/json
      description: 更新当前登录用户的个人资料信息
      parameters:
      - description: 更新资料请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/type_response.UpdateUserProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新用户个人资料
      tags:
      - 用户管理
  /api/v1/user/register:
    post:
      consumes:
      - application/json
      description: 处理用户注册请求，创建新用户账户
      parameters:
      - description: 注册请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
        "500":
          description: 注册失败
          schema:
            $ref: '#/definitions/type_response.BaseResponse'
      summary: 用户注册
      tags:
      - 用户管理
  /user/{id}:
    get:
      consumes:
      - application/json
      description: 根据用户ID获取用户信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 用户信息
          schema:
            $ref: '#/definitions/UserModel.User'
        "404":
          description: 用户不存在
          schema: {}
      summary: 获取用户信息
      tags:
      - User
  /user/{id}/avatar:
    put:
      consumes:
      - multipart/form-data
      description: 更新用户头像
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 头像文件
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            type: string
        "400":
          description: 更新失败
          schema: {}
      summary: 更新用户头像
      tags:
      - User
  /user/{id}/password:
    put:
      consumes:
      - application/json
      description: 修改用户密码
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 旧密码
        in: body
        name: old_password
        required: true
        schema:
          type: string
      - description: 新密码
        in: body
        name: new_password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: 修改成功
          schema:
            type: string
        "400":
          description: 修改失败
          schema: {}
      summary: 修改密码
      tags:
      - User
  /user/{id}/profile:
    put:
      consumes:
      - application/json
      description: 更新用户个人资料
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 用户资料
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/type_response.UpdateUserProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            type: string
        "400":
          description: 更新失败
          schema: {}
      summary: 更新用户资料
      tags:
      - User
  /user/list:
    get:
      consumes:
      - application/json
      description: 分页获取用户列表
      parameters:
      - description: 页码
        in: query
        name: page
        required: true
        type: integer
      - description: 每页数量
        in: query
        name: pageSize
        required: true
        type: integer
      - description: 查询条件
        in: query
        name: query
        type: object
      produces:
      - application/json
      responses:
        "200":
          description: 用户列表
          schema:
            $ref: '#/definitions/type_response.UserListResponse'
      summary: 获取用户列表
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      description: 处理用户登录请求
      parameters:
      - description: 用户名
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: 密码
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 登录失败
          schema: {}
      summary: 用户登录
      tags:
      - User
  /user/register:
    post:
      consumes:
      - application/json
      description: 注册新用户账户
      parameters:
      - description: 用户名
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: 密码
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功
          schema:
            type: string
        "400":
          description: 注册失败
          schema: {}
      summary: 用户注册
      tags:
      - User
swagger: "2.0"
